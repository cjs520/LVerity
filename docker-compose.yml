version: '3'

services:
  frontend:
    build: 
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "8081:80"
    depends_on:
      - backend
    networks:
      - lverity-network
    volumes:
      - ./web/Caddyfile:/etc/caddy/Caddyfile
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root123
      - DB_NAME=lverity
      - JWT_SECRET=abcdefghijklmnopq
    depends_on:
      db:
        condition: service_healthy
    networks:
      - lverity-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=lverity
      - TZ=Asia/Shanghai
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password
      - --max-connections=1000
      - --innodb-buffer-pool-size=1G
      - --innodb-log-buffer-size=64M
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
    networks:
      - lverity-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-proot123"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  db-init:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    command: go run scripts/init_admin.go
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root123
      - DB_NAME=lverity
    depends_on:
      db:
        condition: service_healthy
    networks:
      - lverity-network

networks:
  lverity-network:
    driver: bridge

volumes:
  mysql-data:
  caddy_data:
  caddy_config:
